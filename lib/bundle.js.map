{"version":3,"sources":["webpack:///webpack/bootstrap cb4e05d7f46ef3094679","webpack:///./lib/bullet.js","webpack:///./lib/explosion.js","webpack:///./lib/game.js","webpack:///./lib/enemy_ship.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA,aAAa;AACb,WAAW;AACX,SAAS;;AAET,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD,0BAA0B;AAC1B,wEAAwE;AACxE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;;AAEA;AACA,qBAAqB,uBAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA,GAAG;;;AAGH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,CAAC;;;;;;;AC9oBD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb4e05d7f46ef3094679","const Explosion = require('./explosion');\r\n\r\n//main bullet script\r\nclass Bullet {\r\n    constructor(x, y, velocity, width, height) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.velocity = velocity;\r\n      this.width = width;\r\n      this.height = height;\r\n\r\n      this.alive = false;\r\n      this.defaultWidth = 6;\r\n      this.defaultHeight = 12;\r\n      this.defaultVelocity = 5;\r\n      this.tag = \"\";\r\n      //decide the tag on spawn\r\n\r\n      this.spawn = this.spawn.bind(this);\r\n      this.drawSelf = this.drawSelf.bind(this);\r\n      this.destroy = this.destroy.bind(this);\r\n      this.checkIntersect = this.checkIntersect.bind(this);\r\n      this.checkCollision = this.checkCollision.bind(this);\r\n    }\r\n\r\n\r\n    spawn(x, y, velocity, width, height, tag) {\r\n      this.posX = x;\r\n      this.posY = y;\r\n      this.velocity = velocity;\r\n      this.width = width;\r\n      this.height = height;\r\n      this.alive = true;\r\n      this.tag = tag;\r\n    }\r\n\r\n    drawSelf() {\r\n      ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n      ctx.fillStyle = \"orange\";\r\n      ctx.fillRect(this.posX, this.posY, this.width, this.height);\r\n    }\r\n\r\n    //I plugged in the numbers from the actual positions of the\r\n    //bullet and mothership and it returned true\r\n    checkIntersect(otherobj) {\r\n      if (this.posX < otherobj.posX + otherobj.width &&\r\n        this.posX + this.width > otherobj.posX &&\r\n        this.posY < otherobj.posY + otherobj.height &&\r\n        this.height + this.posY > otherobj.posY) {\r\n          return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    checkCollision(otherObjects) {\r\n      //player bullets ONLY check against enemy list\r\n      //enemy bullets ONLY check against player objects\r\n      if (this.alive) {\r\n\r\n        for (let i = 0; i < otherObjects.length; i++) {\r\n          //it gets in here but never fulfills check intersect with Mship\r\n          // console.log(\"now checking for collision\");\r\n            //only for player\r\n\r\n          if (otherObjects[i].alive) {\r\n\r\n            if (this.checkIntersect(otherObjects[i])) {\r\n              // debugger\r\n              if (otherObjects[i].tag === \"enemyShip\") {\r\n                otherObjects[i].destroy();\r\n                otherObjects.splice(i, 1);\r\n                window.score += 10;\r\n                this.destroy();\r\n\r\n              } else if (otherObjects[i].tag === \"mothership\") {\r\n                //mothership dmg\r\n                otherObjects[i].takeDamage();\r\n                this.destroy();\r\n              } else if (otherObjects[i].tag === \"playerCannon\") {\r\n                otherObjects[0].takeDamage();\r\n                otherObjects[i].destroy();\r\n                this.destroy();\r\n              } else if (otherObjects[i].tag === \"enemy1\") {\r\n                otherObjects[i].destroy();\r\n                this.destroy();\r\n              }\r\n\r\n            }//end of checkIntersect\r\n          }//end of otherObjects alive\r\n        }//end of for\r\n\r\n      }//end of bullet alive\r\n    };\r\n\r\n    destroy() {\r\n      //create explosion\r\n      let newexplo = new Explosion(this);\r\n      newexplo.drawSelf();\r\n      explosionList.push(newexplo);\r\n\r\n      ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n      this.alive = false;\r\n      this.posX = -1000;\r\n      this.posY = -1000;\r\n    }\r\n  }\r\n\r\nmodule.exports = Bullet;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bullet.js\n// module id = 0\n// module chunks = 0","class Explosion {\r\n  constructor(source) {\r\n    this.posX = source.posX;\r\n    this.posY = source.posY;\r\n    this.width = 42;\r\n    this.height = 44;\r\n    this.alive = true;\r\n    this.timer  = 0;\r\n\r\n    //for spriteAnim\r\n    this.frameIndex = 0;\r\n    this.tickCount = 0;\r\n    this.ticksPerFrame = 2;\r\n    this.maxFrames = 7;\r\n\r\n\r\n      this.update = this.update.bind(this);\r\n      this.drawSelf = this.drawSelf.bind(this);\r\n    // this.destroy = this.destroy.bind(this);\r\n  }\r\n\r\n  update() {\r\n    this.tickCount += 1;\r\n    this.timer += 1;\r\n      // debugger\r\n    if (this.tickCount > this.ticksPerFrame) {\r\n      this.tickCount = 0;\r\n      if (this.frameIndex < this.maxFrames) {\r\n        this.frameIndex += 1;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  drawSelf() {\r\nctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n    // ctx.drawImage(imageRepo.explosion,\r\n    //   this.frameIndex * this.width / this.numberOfFrames,\r\n    //   0,\r\n    //   this.width / this.numberOfFrames,\r\n    //   37,\r\n    //   this.posX, this.posY, this.width / this.numberOfFrames, this.height);\r\n      //old one\r\n      ctx.drawImage(imageRepo.explosion,\r\n        this.frameIndex * 297 / 7,          0,        42,        44,\r\n        this.posX, this.posY, this.width, this.height);\r\n  }\r\n\r\n  destroy() {\r\n    ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n    this.alive = false;\r\n    this.posX = -1000;\r\n    this.posY = -1000;\r\n  }\r\n}\r\n\r\nmodule.exports = Explosion;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/explosion.js\n// module id = 1\n// module chunks = 0","document.addEventListener('DOMContentLoaded', () => {\n\n  //run once\n  initialize();\n\n  function initialize() {\n    //initialize canvas vars\n    window.canvas = document.getElementById('canvas');\n    window.canvasBG = document.getElementById('canvas-BG');\n    window.canvasUI = document.getElementById('canvas-UI');\n    window.ctx = canvas.getContext('2d');\n    window.ctx_bg = canvasBG.getContext('2d');\n    window.ctx_ui = canvasUI.getContext('2d');\n\n    //initialize images\n    window.imageRepo = new function() {\n\n      this.allimages = 5;\n      this.loaded = 0;\n      this.mothershipImg = new Image();\n      this.mothershipImg.src = \"./assets/images/altship.png\";\n      // this.mothershipImg.onload = () => {\n      //   ctx.drawImage(this.mothershipImg,\n      //   60, 308, 500, 220);\n      //   // 60;\n      //   // this.posY = 318;\n      //   // this.width = 470;\n      //   // this.height = 200;\n      //   //original 194 x 103\n      // }\n\n      this.cannonSheet = new Image();\n      this.cannonSheet.src = \"./assets/images/cannonsheet.png\"\n      // this.cannonSheet.onload = () => {\n      //   ctx.drawImage(imageRepo.cannonSheet,\n      //     0, 0, 90, 220,\n      //     100, 100, 30, 80);\n      // };\n      //first cannon cooords 0, 0, 90, 220,\n\n      this.spaceBG = new Image();\n      this.spaceBG.src = \"./assets/images/maxresdefault.jpg\";\n      // this.spaceBG.onload = () => {}\n\n      this.shieldSheet= new Image();\n      this.shieldSheet.src = \"./assets/images/shieldsheet.png\";\n      // this.shieldSheet.onload = () => {\n      //   ctx.drawImage(this.shieldSheet,\n      //   0, 0, 300, 100,\n      //   40, 258, 470, 200);\n      //   // ctx.drawImage(imageRepo.shieldSheet,\n      //   // 0, 0, 300, 100,\n      //   // 60 - 20, 318 - 60, 470, 200);\n      // }\n\n      this.enemy1 = new Image();\n      this.enemy1.src = \"./assets/images/enemy1.png\";\n\n      this.explosion = new Image();\n      this.explosion.src = \"./assets/images/explonew.png\";\n\n      this.arrows = new Image();\n      this.arrows.src = \"./assets/images/arrows.png\";\n      this.arrows.onload = () => {\n        ctx_ui.drawImage(this.arrows,\n        80, 210, 50, 50);\n      }\n\n      this.spacebar = new Image();\n      this.spacebar.src = \"./assets/images/spacebar.png\";\n      this.spacebar.onload = () => {\n        ctx_ui.drawImage(this.spacebar,\n        290, 258, 100, 50);\n      }\n      this.healthbar = new Image();\n      this.beacon = new Image();\n      this.powerPanel = new Image();\n\n    }//end of image repo\n\n    window.audioRepo = new function() {\n\n      this.bgm = document.createElement(\"audio\");\n      this.bgm.src = \"./assets/audio/bgm.mp3\";\n      this.bgm.volume = 0.05;\n      this.bgm.loop = true;\n\n\n      this.shootsound = document.createElement(\"audio\");\n      this.shootsound.src = \"./assets/audio/shoot.wav\";\n\n\n    }//end of audio Repo\n\n    //helper methods-----------------------\n\n    //max is not included\n    window.randomInt = function(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n    //used with screen logic\n    window.screenResets = {\n      top: 0,\n      bottom: 400,\n      left: 0,\n      right: 600\n    }\n    //list of bullets on screen\n    window.bulletList = [];\n    //list of enemies on screen\n    //max is currently 12\n    window.enemyList = [];\n    //list of explosions\n    window.explosionList = [];\n    //List of player cannons and mothership\n    window.playerList = [];\n    window.playing = false;\n    window.score = 0;\n    window.beaconstatus = 9999;\n  }//end of initialize\n\n  if (!window.playing) {\n\n    //doesn't work\n    // document.fonts.load('8px \"Press Start 2P\"').then(drawIntro());\n    window.setTimeout(drawIntro, 100);\n\n    //press enter event\n    document.addEventListener('keydown', (e) => {\n\n      if (e.keyCode === 13 && !window.playing) {\n        e.preventDefault();\n        ctx_ui.clearRect(0,0, 600, 400);\n        window.playing = true;\n        window.bg = new Parallax();\n        window.audioRepo.bgm.play();\n        //adding mute button functionality\n        document.getElementById('mutebutton').addEventListener('click', (e) => {\n          e.preventDefault();\n          e = e || window.event;\n          window.audioRepo.bgm.muted = !window.audioRepo.bgm.muted;\n          window.audioRepo.shootsound.muted = !window.audioRepo.shootsound.muted;\n          e.currentTarget.classList.toggle('x');\n        }, false);\n        setAllIntervals();\n        updateLoop();\n      }\n    });\n  }\n\n\n  //mothership def\n  class Mothership {\n    constructor() {\n      this.posX = 60;\n      this.posY = 288;\n      this.width = 500;\n      this.height = 200;\n      this.tag = \"mothership\";\n      this.hullHP = 100;\n      this.shieldHP = 100;\n      this.alive = true;\n\n      this.drawSelf = this.drawSelf.bind(this);\n      this.drawShield = this.drawShield.bind(this);\n      this.clearShield = this.clearShield.bind(this);\n      this.takeDamage = this.takeDamage.bind(this);\n    }\n\n    drawSelf() {\n      // ctx.clearRect(this.posX, this.posY, this.width, this.height);\n      ctx.drawImage(imageRepo.mothershipImg,\n      this.posX, this.posY, this.width, this.height);\n    }\n\n    takeDamage() {\n      if (this.shieldHP > 0) {\n        this.shieldHP -= 10;\n      } else {\n        this.hullHP -= 10;\n      }\n    }\n\n    drawShield() {\n      ctx.clearRect(this.posX - 20, this.posY - 60, this.width, this.height);\n      ctx.globalAlpha = 0.4;\n      ctx.drawImage(imageRepo.shieldSheet,\n      0, 0, 300, 100,\n      this.posX - 20, this.posY - 60, this.width, this.height);\n      ctx.globalAlpha = 1;\n    }\n\n    clearShield() {\n      ctx.clearRect(this.posX - 20, this.posY - 60, this.width, this.height);\n    }\n  }\n  //draw player stuff\n  const mothership = new Mothership();\n  playerList.push(mothership);\n\n\n  //initialize cannon vars\n  class Cannon {\n    constructor() {\n      this.posX = canvas.width/2 - 12;\n      this.posY = canvas.height - 140;\n      this.width = 30;\n      this.height = 80;\n      this.alive = true;\n      this.tag = \"playerCannon\";\n      this.deathtimer = 0;\n      this.cooldown = 100;\n\n      this.drawSelf = this.drawSelf.bind(this);\n      this.screenResets = this.screenResets.bind(this);\n      this.destroy = this.destroy.bind(this);\n      this.respawn = this.respawn.bind(this);\n    }\n\n    drawSelf() {\n      ctx.clearRect(this.posX, this.posY, this.width, this.height -25);\n      ctx.drawImage(imageRepo.cannonSheet,\n      0, 0, 90, 220,\n      this.posX, this.posY, this.width, this.height);\n    }\n    screenResets() {\n      //if it goes off right side\n      if (cannon.posX > 580)\n      cannon.posX = 40;\n      if (cannon.posX < 30)\n      cannon.posX = 570;\n    }\n\n    respawn() {\n      this.alive = true;\n      ctx.drawImage(imageRepo.cannonSheet,\n      0, 0, 90, 220,\n      this.posX, this.posY, this.width, this.height);\n    }\n\n    destroy() {\n      let newexplo = new Explosion(this);\n      newexplo.drawSelf();\n      explosionList.push(newexplo);\n      ctx.clearRect(this.posX, this.posY, this.width, this.height);\n      this.alive = false;\n    }\n\n    playerShoot() {\n      audioRepo.shootsound.play();\n      let nb = new bullet(\n        cannon.posX + 5, cannon.posY, 10, 6, 12);\n        nb.spawn(cannon.posX + 5, cannon.posY, 10, 6, 12, \"player\");\n        nb.drawSelf();\n        bulletList.push(nb);\n    }\n  }\n  let cannon = new Cannon();\n  playerList.push(cannon);\n\n  class Parallax {\n    constructor() {\n      this.posX = 0;\n      this.posY = 0;\n      this.width = 600;\n      this.height = 400;\n      this.speed = 0.2;\n      this.drawSelf = this.drawSelf.bind(this);\n    }\n\n    drawSelf() {\n      ctx_bg.clearRect(this.posX, this.posY, this.width, this.height);\n      this.posX += this.speed;\n      if (this.posX > this.width) { this.posX = 0; }\n      if (this.posX > 0) { ctx_bg.drawImage(imageRepo.spaceBG,\n        this.posX - this.width + 1, this.posY, this.width, this.height); }\n      ctx_bg.drawImage(imageRepo.spaceBG,\n      this.posX, this.posY, this.width, this.height)\n    }\n  }\n\n  //main bullet script\n  const bullet = require('./bullet');\n\n    //main enemy script\n  const enemyShip = require('./enemy_ship');\n\n    //explo script\n    const Explosion = require('./explosion');\n\n    function updateShip() {\n      //mothership\n      if (playerList[0].shieldHP > 0) {\n        playerList[0].drawShield();\n      } else if (playerList[0].shieldHP === 0) {\n        playerList[0].clearShield();\n      }\n      playerList[0].drawSelf();\n\n\n    }\n\n    function updateBullets() {\n      for (let i = 0; i < bulletList.length; i++) {\n\n        if (bulletList[i].alive) {\n          //if bullet is alive and still within play area...\n          if (bulletList[i].posY > -20 && bulletList[i].posY < 400) {\n            ctx.clearRect(bulletList[i].posX, bulletList[i].posY,\n              bulletList[i].width, bulletList[i].height);\n            ctx.fillStyle = \"orange\";\n              if (bulletList[i].tag === \"player\") {\n                //bullet source is player\n                bulletList[i].posY -= 5;\n                bulletList[i].checkCollision(enemyList);\n                bulletList[i].checkCollision(bulletList);\n              } else {\n                //check if bullet source is enemy\n                bulletList[i].posY += 2;\n                bulletList[i].checkCollision(playerList);\n              }\n            ctx.fillRect(bulletList[i].posX, bulletList[i].posY,\n            bulletList[i].width, bulletList[i].height);\n\n          } else {\n            //if pos is going off, delete it\n            //splice removes from i position, 1 thing\n            bulletList[i].alive = false;\n            bulletList[i].posX = -1000;\n            bulletList[i].posY = -1000;\n            bulletList.splice(i, 1);\n          }\n        } else {\n          //if its in the list but not alive...\n          bulletList[i].posX = -1000;\n          bulletList[i].posY = -1000;\n          bulletList.splice(i, 1);\n        }\n      }\n\n    }\n\n    function updateExplosions() {\n      for (let i = 0; i < explosionList.length; i++) {\n        if (explosionList[i].alive) {\n          ctx.clearRect(explosionList[i].posX, explosionList[i].posY,\n            explosionList[i].width -10, explosionList[i].height - 10);\n\n            explosionList[i].update();\n            explosionList[i].drawSelf();\n              if (explosionList[i].timer >= 200) {\n                explosionList[i].destroy();\n                explosionList.splice(i, 1);\n              }\n        } else {\n          //if its in the list but not alive...\n          explosionList[i].destroy();\n          explosionList.splice(i, 1);\n        }\n      }\n    }\n\n    function enemyUpdate() {\n      if (window.playing) {\n\n        for (let i = 0; i < enemyList.length; i++) {\n          if (enemyList[i].alive) {\n            enemyList[i].moveHorizontal();\n            enemyList[i].moveVertical();\n          } else {\n            //get rid of enemy from list\n            enemyList.splice(i, 1);\n          }\n        }\n      }\n    }\n\n    function enemyAttack() {\n      if (window.playing) {\n        for (let i = 0; i < enemyList.length; i++) {\n          if (enemyList[i].alive) {\n            enemyList[i].shoot(enemyList[i]);\n          }\n\n        }\n\n      }\n    }\n\n    function randomSpawn() {\n      if (window.playing) {\n        if (enemyList.length < 12) {\n          let randomX = randomInt(0, 10);\n          let spawnXs = [60, 110, 160, 220, 270, 320, 370, 420, 470, 520]\n          let newenemy = new enemyShip(spawnXs[randomX], 30,\n            30, 30, 30, 30, \"enemyShip\");\n            newenemy.drawSelf();\n            enemyList.push(newenemy);\n\n          }\n\n      }\n    }\n\n    function beacon(image) {\n      this.timer = 20000;\n      this.image = image;\n      this.imagePosX = 400;\n      this.imagePosY = 200;\n      this.runTimer = function() {\n        this.timer -= 1;\n        this.imagePosY += 1;\n      }\n\n      this.drawSelf = function() {\n        //draw beacon, vertical line, 2 horiz lines\n        //clear, then invoke update, then redraw\n        ctx_ui.clearRect(this.imagePosX, this.imagePosY, 100, 50);\n        // this.runTimer();\n        // ctx_ui.drawImage(imageRepo.beacon,\n        // this.imagePosX, this.imagePosY, 100, 50);\n      }\n\n    }\n\n    function drawUI() {\n      //left side\n      ctx_ui.font = \"14px Calibri\";\n      ctx_ui.clearRect(0, 280, 100, 80);\n      ctx_ui.fillText(\"Score:\", 0, 300);\n      ctx_ui.fillText(window.score, 45, 300);\n      ctx_ui.fillText(\"Shield:\", 0, 320);\n      ctx_ui.fillText(playerList[0].shieldHP, 45, 320);\n      ctx_ui.fillText(\"Hull:\", 0, 340);\n      ctx_ui.fillText(playerList[0].hullHP, 45, 340);\n\n      //rightside\n      ctx_ui.clearRect(500, 280, 100, 50);\n      ctx_ui.fillText(\"Beacon Status:\", 510, 300);\n      ctx_ui.fillText(window.beaconstatus, 510, 320);\n    }\n\n    function updateLoop() {\n      if (window.playing) {\n        window.requestAnimationFrame(updateLoop);\n        window.bg.drawSelf();\n        updateShip();\n        drawUI();\n        updateBullets();\n        updateExplosions();\n        updateCannon();\n        if (window.beaconstatus > -4)\n        window.beaconstatus -= 2;\n        defeatCondition();\n        winCondition();\n      }\n    }\n\n  function setAllIntervals() {\n    //custom update intervals\n      window.setInterval(randomSpawn, 3000);\n      window.setInterval(enemyUpdate, 500);\n      window.setInterval(enemyAttack, randomInt(500, 5000));\n  }//end set all intervals\n\n  function updateCannon() {\n    let thisCannon = window.playerList[1];\n    //it never goes in here\n    if (!thisCannon.alive) {\n      //something is going wrong here\n      thisCannon.deathtimer += 1;\n      console.log(thisCannon.deathtimer);\n      if (thisCannon.deathtimer >= 10) {\n        thisCannon.respawn();\n      }\n    } else {\n      //its alive\n      thisCannon.drawSelf();\n\n\n    }\n\n  }//end of update cannon\n\n\n  //gotta split horizontal and vertical properly\n  function moveRight() {\n\n    ctx.clearRect(cannon.posX, cannon.posY, cannon.width, cannon.height - 15);\n\n    //horizontal movement\n    if (cannon.posX > 70 && cannon.posX < 530) {\n      cannon.posX += 20;\n    } else {\n      cannon.posX += 10;\n    }\n\n    //vertical movement\n\n    //descend while you're on right\n    if (cannon.posX > 415) {\n      cannon.posY += 10;\n    }\n    //ascend while you're on left\n    else if (cannon.posX < 300) {\n      cannon.posY -= 10;\n    } else if (cannon.posX < 185) {\n      cannon.posY -= 15;\n    }\n\n    //downward bounds\n    if (cannon.posY > 400)\n    cannon.posY = 400;\n\n    //upward bounds\n    if (cannon.posY < 260)\n    cannon.posY = 260;\n\n    cannon.screenResets();\n  }\n\n  function moveLeft() {\n\n    ctx.clearRect(cannon.posX, cannon.posY, cannon.width, cannon.height - 15);\n\n    //horizontal movement\n    if (cannon.posX > 70 && cannon.posX < 580) {\n      cannon.posX -= 20;\n    } else {\n      cannon.posX -= 10;\n    }\n\n    //vertical movement\n\n    //decend while you're on left\n    if (cannon.posX < 185) {\n      cannon.posY += 10;\n    }\n    //ascend while you're on right\n    else if (cannon.posX > 300) {\n      cannon.posY -= 10;\n    } else if (cannon.posX > 415) {\n      cannon.posY -= 15;\n    }\n\n    //downward bounds\n    if (cannon.posY > 400)\n    cannon.posY = 400;\n\n    //upward bounds\n    if (cannon.posY < 260)\n    cannon.posY = 260;\n    cannon.screenResets();\n  }\n\n  function defeatCondition() {\n    if (playerList[0].hullHP <= 0)\n    defeat();\n  }\n\n  function winCondition() {\n    if (playerList[0].hullHP > 0 && beaconstatus <= 0)\n    victory();\n  }\n\n  function drawIntro() {\n    ctx_bg.fillRect(0,0,600,400);\n    ctx_ui.fillStyle = \"White\";\n    ctx_ui.font = '8px \"Press Start 2P\"';\n    ctx_ui.fillText(\"You are the last remaining survivors of your species,\", 40, 40);\n    ctx_ui.fillText(\"thrust into the void of space...\", 40, 50);\n    ctx_ui.fillText(\"...after your homeworld was ravaged by environmental destruction\", 40, 60);\n    ctx_ui.fillText(\"your sensors have identified a nearby habitable planet...\", 40, 80);\n    ctx_ui.fillText(\"The third planet in the Milky Way Galaxy...\", 40, 90);\n    ctx_ui.font = '10px \"Press Start 2P\"';\n    ctx_ui.fillText(\"PROTECT THE MOTHERSHIP UNTIL INVASION BEACON TOUCHDOWN.\", 40, 120);\n    ctx_ui.fillText(\"Use       to move cannon's position.\", 40, 260);\n    ctx_ui.fillText(\"Shoot puny Earthlings with        .\", 40, 280);\n    ctx_ui.fillText(\"Press Enter to Begin.\", 40, 340);\n  }\n\n  function defeat() {\n    window.playing = false;\n    window.audioRepo.bgm.pause();\n    window.defeat = true;\n    if (window.defeat) {\n      cannon.alive = false;\n      ctx_ui.fillStyle = \"White\";\n      ctx_ui.font = '40px \"Press Start 2P\"';\n      ctx_ui.fillText(\"DEFEAT\", canvas.width / 2 -100, 55);\n    }\n    //show graphic for defeated\n  }\n\n  function victory() {\n    window.playing = false;\n    window.audioRepo.bgm.pause();\n    window.victory = true;\n    if (window.victory) {\n      cannon.alive = false;\n      ctx_ui.fillStyle = \"White\";\n      ctx_ui.font = '40px \"Press Start 2P\"';\n      ctx_ui.fillText(\"VICTORY\", canvas.width / 2 -100, 55);\n    }\n    //show graphic for victory\n  }\n\n\n  //keypress handler\n  //this is also basically the update() for ship\n  document.addEventListener('keydown', (e) => {\n\n    if (cannon.alive) {\n      switch (e.keyCode) {\n\n        //left\n        case 37:\n          e.preventDefault();\n          moveLeft();\n          ctx.drawImage(imageRepo.cannonSheet,\n          0, 0, 90, 220,\n          cannon.posX, cannon.posY, cannon.width, cannon.height - 20);\n        break;\n\n        //right\n        case 39:\n          e.preventDefault();\n          moveRight();\n          ctx.drawImage(imageRepo.cannonSheet,\n          0, 0, 90, 220,\n          cannon.posX, cannon.posY, cannon.width, cannon.height - 20);\n        break;\n\n        //spacebar shoot\n        case 32:\n          e.preventDefault();\n          playerList[1].playerShoot();\n        break;\n\n        //this is a tester button (q)\n        case 81:\n          e.preventDefault();\n\n        break;\n\n          //add another case for pause if time allows\n          default:\n        }\n\n    }\n  });\n\n})//end of DOMContentLoaded\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","const Bullet = require('./bullet');\r\n\r\nclass enemyShip {\r\n  constructor(x, y, velocityX, velocityY, width, height, tag) {\r\n    this.posX = x;\r\n    this.posY = y;\r\n    this.velocityX = velocityX;\r\n    this.velocityY = velocityY;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.tag = tag;\r\n    this.alive = true;\r\n    this.cooldown = false;\r\n    this.shoot = this.shoot.bind(this);\r\n    this.cooldownreset = this.cooldownreset.bind(this);\r\n  }\r\n\r\n  drawSelf() {\r\n    ctx.drawImage(imageRepo.enemy1,\r\n      this.posX, this.posY, this.width, this.height);\r\n  }\r\n\r\n  moveHorizontal() {\r\n    ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n      if (randomInt(0,2) === 0) {\r\n        this.posX += 30;\r\n      } else {\r\n        this.posX -= 30;\r\n      }\r\n    this.screenResets();\r\n    ctx.drawImage(imageRepo.enemy1,\r\n      this.posX, this.posY, this.width, this.height);\r\n  }\r\n\r\n  moveVertical() {\r\n    let chancetoMoveForward = randomInt(0,10);\r\n    let forwardVelocity = 0;\r\n      if (chancetoMoveForward >= 9) {\r\n        forwardVelocity = 30;\r\n      }\r\n    ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n    ctx.fillStyle = \"white\";\r\n    this.posY += forwardVelocity;\r\n    ctx.drawImage(imageRepo.enemy1,\r\n      this.posX, this.posY, this.width, this.height);\r\n  }\r\n\r\n  cooldownreset() {\r\n    this.cooldown = false;\r\n  }\r\n\r\n\r\n  shoot(source) {\r\n    if (this.cooldown) {\r\n      let cooldowntimer = randomInt(500, 8000);\r\n      setTimeout(this.cooldownreset, cooldowntimer)\r\n    } else {\r\n      let nb = new Bullet(\r\n        source.posX + 5, source.posY, 10, 6, 12);\r\n        nb.spawn(source.posX + 7, source.posY + 28, 10, 6, 12, \"enemy1\");\r\n        nb.drawSelf();\r\n        bulletList.push(nb);\r\n        this.cooldown = true;\r\n    }\r\n    // console.log(bulletList);\r\n  }\r\n\r\n  screenResets() {\r\n    if (this.posX < 60)\r\n    this.posX = 60;\r\n    if (this.posX > 520)\r\n    this.posX = 520;\r\n    if (this.posY > 400)\r\n    this.destroy();\r\n  }\r\n\r\n\r\n  destroy() {\r\n    //clear self\r\n    ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n    this.alive = false;\r\n    this.posX = -1000;\r\n    this.posY = -1000;\r\n  }\r\n\r\n}//end of enemy ship\r\n\r\nmodule.exports = enemyShip;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy_ship.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}