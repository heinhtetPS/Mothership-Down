{"version":3,"sources":["webpack:///webpack/bootstrap 0373e58330bd987c2585","webpack:///./lib/game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD,0BAA0B;AAC1B,wEAAwE;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB,yBAAyB;AAClD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,eAAe;AACf,aAAa;AACb,WAAW;;AAEX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;;AAEA;AACA,qBAAqB,uBAAuB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;;AAEA,GAAG;;;AAGH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0373e58330bd987c2585","document.addEventListener('DOMContentLoaded', () => {\r\n\r\n  //run once\r\n  initialize();\r\n\r\n  function initialize() {\r\n    //initialize canvas vars\r\n    window.canvas = document.getElementById('canvas');\r\n    window.canvasBG = document.getElementById('canvas-BG');\r\n    window.canvasUI = document.getElementById('canvas-UI');\r\n    window.ctx = canvas.getContext('2d');\r\n    window.ctx_bg = canvasBG.getContext('2d');\r\n    window.ctx_ui = canvasUI.getContext('2d');\r\n\r\n    //initialize images\r\n    window.imageRepo = new function() {\r\n\r\n      this.allimages = 5;\r\n      this.loaded = 0;\r\n      this.mothershipImg = new Image();\r\n      this.mothershipImg.src = \"./assets/images/altship.png\";\r\n      // this.mothershipImg.onload = () => {\r\n      //   ctx.drawImage(this.mothershipImg,\r\n      //   60, 308, 500, 220);\r\n      //   // 60;\r\n      //   // this.posY = 318;\r\n      //   // this.width = 470;\r\n      //   // this.height = 200;\r\n      //   //original 194 x 103\r\n      // }\r\n\r\n      this.cannonSheet = new Image();\r\n      this.cannonSheet.src = \"./assets/images/cannonsheet.png\"\r\n      // this.cannonSheet.onload = () => {\r\n      //   ctx.drawImage(imageRepo.cannonSheet,\r\n      //     0, 0, 90, 220,\r\n      //     100, 100, 30, 80);\r\n      // };\r\n      //first cannon cooords 0, 0, 90, 220,\r\n\r\n      this.spaceBG = new Image();\r\n      this.spaceBG.src = \"./assets/images/maxresdefault.jpg\";\r\n      // this.spaceBG.onload = () => {}\r\n\r\n      this.shieldSheet= new Image();\r\n      this.shieldSheet.src = \"./assets/images/shieldsheet.png\";\r\n      // this.shieldSheet.onload = () => {\r\n      //   ctx.drawImage(this.shieldSheet,\r\n      //   0, 0, 300, 100,\r\n      //   40, 258, 470, 200);\r\n      //   // ctx.drawImage(imageRepo.shieldSheet,\r\n      //   // 0, 0, 300, 100,\r\n      //   // 60 - 20, 318 - 60, 470, 200);\r\n      // }\r\n\r\n      this.enemy1 = new Image();\r\n      this.enemy1.src = \"./assets/images/enemy1.png\";\r\n\r\n      this.explosion = new Image();\r\n      this.explosion.src = \"./assets/images/explonew.png\";\r\n\r\n      this.arrows = new Image();\r\n      this.arrows.src = \"./assets/images/arrows.png\";\r\n      this.arrows.onload = () => {\r\n        ctx_ui.drawImage(this.arrows,\r\n        80, 210, 50, 50);\r\n      }\r\n\r\n      this.spacebar = new Image();\r\n      this.spacebar.src = \"./assets/images/spacebar.png\";\r\n      this.spacebar.onload = () => {\r\n        ctx_ui.drawImage(this.spacebar,\r\n        290, 258, 100, 50);\r\n      }\r\n      this.healthbar = new Image();\r\n      this.beacon = new Image();\r\n      this.powerPanel = new Image();\r\n\r\n    }//end of image repo\r\n\r\n    window.audioRepo = new function() {\r\n\r\n      this.bgm = document.createElement(\"audio\");\r\n      this.bgm.src = \"./assets/audio/bgm.mp3\";\r\n      this.bgm.volume = 0.05;\r\n      this.bgm.loop = true;\r\n\r\n\r\n      this.shootsound = document.createElement(\"audio\");\r\n      this.shootsound.src = \"./assets/audio/shoot.wav\";\r\n\r\n\r\n    }//end of audio Repo\r\n\r\n    //helper methods-----------------------\r\n\r\n    //max is not included\r\n    window.randomInt = function(min, max) {\r\n      min = Math.ceil(min);\r\n      max = Math.floor(max);\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    //used with screen logic\r\n    window.screenResets = {\r\n      top: 0,\r\n      bottom: 400,\r\n      left: 0,\r\n      right: 600\r\n    }\r\n    //list of bullets on screen\r\n    window.bulletList = [];\r\n    //list of enemies on screen\r\n    //max is currently 12\r\n    window.enemyList = [];\r\n    //list of explosions\r\n    window.explosionList = [];\r\n    //List of player cannons and mothership\r\n    window.playerList = [];\r\n    window.playing = false;\r\n    window.score = 0;\r\n    window.beaconstatus = 9999;\r\n  }//end of initialize\r\n\r\n  if (!window.playing) {\r\n\r\n    //doesn't work\r\n    // document.fonts.load('8px \"Press Start 2P\"').then(drawIntro());\r\n    window.setTimeout(drawIntro, 100);\r\n\r\n    //press enter event\r\n    document.addEventListener('keydown', (e) => {\r\n\r\n      if (e.keyCode === 13 && !window.playing) {\r\n        e.preventDefault();\r\n        ctx_ui.clearRect(0,0, 600, 400);\r\n        window.playing = true;\r\n        window.bg = new Parallax();\r\n        window.audioRepo.bgm.play();\r\n        //adding mute button functionality\r\n        document.getElementById('mutebutton').addEventListener('click', (e) => {\r\n          e.preventDefault();\r\n          e = e || window.event;\r\n          window.audioRepo.bgm.muted = !window.audioRepo.bgm.muted;\r\n          window.audioRepo.shootsound.muted = !window.audioRepo.shootsound.muted;\r\n          e.currentTarget.classList.toggle('x');\r\n        }, false);\r\n        setAllIntervals();\r\n        updateLoop();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  //mothership def\r\n  class Mothership {\r\n    constructor() {\r\n      this.posX = 60;\r\n      this.posY = 288;\r\n      this.width = 500;\r\n      this.height = 200;\r\n      this.tag = \"mothership\";\r\n      this.hullHP = 100;\r\n      this.shieldHP = 100;\r\n      this.alive = true;\r\n\r\n      this.drawSelf = this.drawSelf.bind(this);\r\n      this.drawShield = this.drawShield.bind(this);\r\n      this.clearShield = this.clearShield.bind(this);\r\n      this.takeDamage = this.takeDamage.bind(this);\r\n    }\r\n\r\n    drawSelf() {\r\n      // ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n      ctx.drawImage(imageRepo.mothershipImg,\r\n      this.posX, this.posY, this.width, this.height);\r\n    }\r\n\r\n    takeDamage() {\r\n      if (this.shieldHP > 0) {\r\n        this.shieldHP -= 10;\r\n      } else {\r\n        this.hullHP -= 10;\r\n      }\r\n    }\r\n\r\n    drawShield() {\r\n      ctx.clearRect(this.posX - 20, this.posY - 60, this.width, this.height);\r\n      ctx.globalAlpha = 0.4;\r\n      ctx.drawImage(imageRepo.shieldSheet,\r\n      0, 0, 300, 100,\r\n      this.posX - 20, this.posY - 60, this.width, this.height);\r\n      ctx.globalAlpha = 1;\r\n    }\r\n\r\n    clearShield() {\r\n      ctx.clearRect(this.posX - 20, this.posY - 60, this.width, this.height);\r\n    }\r\n  }\r\n  //draw player stuff\r\n  const mothership = new Mothership();\r\n  playerList.push(mothership);\r\n\r\n\r\n  //initialize cannon vars\r\n  class Cannon {\r\n    constructor() {\r\n      this.posX = canvas.width/2 - 12;\r\n      this.posY = canvas.height - 140;\r\n      this.width = 30;\r\n      this.height = 80;\r\n      this.alive = true;\r\n      this.tag = \"playerCannon\";\r\n      this.deathtimer = 0;\r\n      this.cooldown = 100;\r\n\r\n      this.drawSelf = this.drawSelf.bind(this);\r\n      this.screenResets = this.screenResets.bind(this);\r\n      this.destroy = this.destroy.bind(this);\r\n      this.respawn = this.respawn.bind(this);\r\n    }\r\n\r\n    drawSelf() {\r\n      ctx.clearRect(this.posX, this.posY, this.width, this.height -25);\r\n      ctx.drawImage(imageRepo.cannonSheet,\r\n      0, 0, 90, 220,\r\n      this.posX, this.posY, this.width, this.height);\r\n    }\r\n    screenResets() {\r\n      //if it goes off right side\r\n      if (cannon.posX > 580)\r\n      cannon.posX = 40;\r\n      if (cannon.posX < 30)\r\n      cannon.posX = 570;\r\n    }\r\n\r\n    respawn() {\r\n      this.alive = true;\r\n      ctx.drawImage(imageRepo.cannonSheet,\r\n      0, 0, 90, 220,\r\n      this.posX, this.posY, this.width, this.height);\r\n    }\r\n\r\n    destroy() {\r\n      let newexplo = new Explosion(this);\r\n      newexplo.drawSelf();\r\n      explosionList.push(newexplo);\r\n      ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n      this.alive = false;\r\n    }\r\n\r\n    playerShoot() {\r\n      audioRepo.shootsound.play();\r\n      let nb = new bullet(\r\n        cannon.posX + 5, cannon.posY, 10, 6, 12);\r\n        nb.spawn(cannon.posX + 5, cannon.posY, 10, 6, 12, \"player\");\r\n        nb.drawSelf();\r\n        bulletList.push(nb);\r\n    }\r\n  }\r\n  let cannon = new Cannon();\r\n  playerList.push(cannon);\r\n\r\n  class Parallax {\r\n    constructor() {\r\n      this.posX = 0;\r\n      this.posY = 0;\r\n      this.width = 600;\r\n      this.height = 400;\r\n      this.speed = 0.2;\r\n      this.drawSelf = this.drawSelf.bind(this);\r\n    }\r\n\r\n    drawSelf() {\r\n      ctx_bg.clearRect(this.posX, this.posY, this.width, this.height);\r\n      this.posX += this.speed;\r\n      if (this.posX > this.width) { this.posX = 0; }\r\n      if (this.posX > 0) { ctx_bg.drawImage(imageRepo.spaceBG,\r\n        this.posX - this.width + 1, this.posY, this.width, this.height); }\r\n      ctx_bg.drawImage(imageRepo.spaceBG,\r\n      this.posX, this.posY, this.width, this.height)\r\n    }\r\n  }\r\n\r\n  //main bullet script\r\n  function bullet(x, y, velocity, width, height) {\r\n      this.alive = false;\r\n      this.defaultWidth = 6;\r\n      this.defaultHeight = 12;\r\n      this.defaultVelocity = 5;\r\n      this.tag = \"\";\r\n      //decide the tag on spawn\r\n\r\n      this.spawn = function(x, y, velocity, width, height, tag) {\r\n      this.posX = x;\r\n      this.posY = y;\r\n      this.velocity = velocity;\r\n      this.width = width;\r\n      this.height = height;\r\n      this.alive = true;\r\n      this.tag = tag;\r\n    }\r\n\r\n      this.drawSelf = function() {\r\n\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        ctx.fillStyle = \"orange\";\r\n        ctx.fillRect(this.posX, this.posY, this.width, this.height);\r\n  }\r\n\r\n      //I plugged in the numbers from the actual positions of the\r\n      //bullet and mothership and it returned true\r\n      this.checkIntersect = function(otherobj) {\r\n        if (this.posX < otherobj.posX + otherobj.width &&\r\n          this.posX + this.width > otherobj.posX &&\r\n          this.posY < otherobj.posY + otherobj.height &&\r\n          this.height + this.posY > otherobj.posY) {\r\n            return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      this.checkCollision = function(otherObjects) {\r\n        //player bullets ONLY check against enemy list\r\n        //enemy bullets ONLY check against player objects\r\n        if (this.alive) {\r\n\r\n          for (let i = 0; i < otherObjects.length; i++) {\r\n            //it gets in here but never fulfills check intersect with Mship\r\n            // console.log(\"now checking for collision\");\r\n              //only for player\r\n\r\n            if (otherObjects[i].alive) {\r\n\r\n              if (this.checkIntersect(otherObjects[i])) {\r\n                // debugger\r\n                if (otherObjects[i].tag === \"enemyShip\") {\r\n                  otherObjects[i].destroy();\r\n                  otherObjects.splice(i, 1);\r\n                  window.score += 10;\r\n                  this.destroy();\r\n\r\n                } else if (otherObjects[i].tag === \"mothership\") {\r\n                  //mothership dmg\r\n                  otherObjects[i].takeDamage();\r\n                  this.destroy();\r\n                } else if (otherObjects[i].tag === \"playerCannon\") {\r\n                  otherObjects[0].takeDamage();\r\n                  otherObjects[i].destroy();\r\n                  this.destroy();\r\n                } else if (otherObjects[i].tag === \"enemy1\") {\r\n                  otherObjects[i].destroy();\r\n                  this.destroy();\r\n                  console.log(\"bullets collided and died\");\r\n                }\r\n\r\n              }//end of checkIntersect\r\n            }//end of otherObjects alive\r\n          }//end of for\r\n\r\n        }//end of bullet alive\r\n      };\r\n\r\n      this.destroy = function() {\r\n        //create explosion\r\n        let newexplo = new Explosion(this);\r\n        newexplo.drawSelf();\r\n        explosionList.push(newexplo);\r\n\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        this.alive = false;\r\n        this.posX = -1000;\r\n        this.posY = -1000;\r\n      }\r\n    }\r\n\r\n    //main enemy script\r\n    class enemyShip {\r\n      constructor(x, y, velocityX, velocityY, width, height, tag) {\r\n        this.posX = x;\r\n        this.posY = y;\r\n        this.velocityX = velocityX;\r\n        this.velocityY = velocityY;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.tag = tag;\r\n        this.alive = true;\r\n        this.cooldown = false;\r\n        this.shoot = this.shoot.bind(this);\r\n        this.cooldownreset = this.cooldownreset.bind(this);\r\n      }\r\n\r\n      drawSelf() {\r\n        ctx.drawImage(imageRepo.enemy1,\r\n          this.posX, this.posY, this.width, this.height);\r\n      }\r\n\r\n      moveHorizontal() {\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n          if (randomInt(0,2) === 0) {\r\n            this.posX += 30;\r\n          } else {\r\n            this.posX -= 30;\r\n          }\r\n        this.screenResets();\r\n        ctx.drawImage(imageRepo.enemy1,\r\n          this.posX, this.posY, this.width, this.height);\r\n      }\r\n\r\n      moveVertical() {\r\n        let chancetoMoveForward = randomInt(0,10);\r\n        let forwardVelocity = 0;\r\n          if (chancetoMoveForward >= 9) {\r\n            forwardVelocity = 30;\r\n          }\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        ctx.fillStyle = \"white\";\r\n        this.posY += forwardVelocity;\r\n        ctx.drawImage(imageRepo.enemy1,\r\n          this.posX, this.posY, this.width, this.height);\r\n      }\r\n\r\n      cooldownreset() {\r\n        this.cooldown = false;\r\n      }\r\n\r\n\r\n      shoot(source) {\r\n        if (this.cooldown) {\r\n          let cooldowntimer = randomInt(500, 8000);\r\n          setTimeout(this.cooldownreset, cooldowntimer)\r\n        } else {\r\n          let nb = new bullet(\r\n            source.posX + 5, source.posY, 10, 6, 12);\r\n            nb.spawn(source.posX + 7, source.posY + 28, 10, 6, 12, \"enemy1\");\r\n            nb.drawSelf();\r\n            bulletList.push(nb);\r\n            this.cooldown = true;\r\n        }\r\n        // console.log(bulletList);\r\n      }\r\n\r\n      screenResets() {\r\n        if (this.posX < 60)\r\n        this.posX = 60;\r\n        if (this.posX > 520)\r\n        this.posX = 520;\r\n        if (this.posY > 400)\r\n        this.destroy();\r\n      }\r\n\r\n\r\n      destroy() {\r\n        //clear self\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        this.alive = false;\r\n        this.posX = -1000;\r\n        this.posY = -1000;\r\n      }\r\n\r\n    }//end of enemy ship\r\n\r\n    class Explosion {\r\n      constructor(source) {\r\n        this.posX = source.posX;\r\n        this.posY = source.posY;\r\n        this.width = 42;\r\n        this.height = 44;\r\n        this.alive = true;\r\n        this.timer  = 0;\r\n\r\n        //for spriteAnim\r\n        this.frameIndex = 0;\r\n        this.tickCount = 0;\r\n        this.ticksPerFrame = 2;\r\n        this.maxFrames = 7;\r\n\r\n\r\n          this.update = this.update.bind(this);\r\n          this.drawSelf = this.drawSelf.bind(this);\r\n        // this.destroy = this.destroy.bind(this);\r\n      }\r\n\r\n      update() {\r\n        this.tickCount += 1;\r\n        this.timer += 1;\r\n          // debugger\r\n        if (this.tickCount > this.ticksPerFrame) {\r\n          this.tickCount = 0;\r\n          if (this.frameIndex < this.maxFrames) {\r\n            this.frameIndex += 1;\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      drawSelf() {\r\n    ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        // ctx.drawImage(imageRepo.explosion,\r\n        //   this.frameIndex * this.width / this.numberOfFrames,\r\n        //   0,\r\n        //   this.width / this.numberOfFrames,\r\n        //   37,\r\n        //   this.posX, this.posY, this.width / this.numberOfFrames, this.height);\r\n          //old one\r\n          ctx.drawImage(imageRepo.explosion,\r\n            this.frameIndex * 297 / 7,          0,        42,        44,\r\n            this.posX, this.posY, this.width, this.height);\r\n      }\r\n\r\n      destroy() {\r\n        ctx.clearRect(this.posX, this.posY, this.width, this.height);\r\n        this.alive = false;\r\n        this.posX = -1000;\r\n        this.posY = -1000;\r\n      }\r\n    }\r\n\r\n    function updateShip() {\r\n      //mothership\r\n      if (playerList[0].shieldHP > 0) {\r\n        playerList[0].drawShield();\r\n      } else if (playerList[0].shieldHP === 0) {\r\n        playerList[0].clearShield();\r\n      }\r\n      playerList[0].drawSelf();\r\n\r\n\r\n    }\r\n\r\n    function updateBullets() {\r\n      for (let i = 0; i < bulletList.length; i++) {\r\n\r\n        if (bulletList[i].alive) {\r\n          //if bullet is alive and still within play area...\r\n          if (bulletList[i].posY > -20 && bulletList[i].posY < 400) {\r\n            ctx.clearRect(bulletList[i].posX, bulletList[i].posY,\r\n              bulletList[i].width, bulletList[i].height);\r\n            ctx.fillStyle = \"orange\";\r\n              if (bulletList[i].tag === \"player\") {\r\n                //bullet source is player\r\n                bulletList[i].posY -= 5;\r\n                bulletList[i].checkCollision(enemyList);\r\n                bulletList[i].checkCollision(bulletList);\r\n              } else {\r\n                //check if bullet source is enemy\r\n                bulletList[i].posY += 2;\r\n                bulletList[i].checkCollision(playerList);\r\n              }\r\n            ctx.fillRect(bulletList[i].posX, bulletList[i].posY,\r\n            bulletList[i].width, bulletList[i].height);\r\n\r\n          } else {\r\n            //if pos is going off, delete it\r\n            //splice removes from i position, 1 thing\r\n            bulletList[i].alive = false;\r\n            bulletList[i].posX = -1000;\r\n            bulletList[i].posY = -1000;\r\n            bulletList.splice(i, 1);\r\n          }\r\n        } else {\r\n          //if its in the list but not alive...\r\n          bulletList[i].posX = -1000;\r\n          bulletList[i].posY = -1000;\r\n          bulletList.splice(i, 1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    function updateExplosions() {\r\n      for (let i = 0; i < explosionList.length; i++) {\r\n        if (explosionList[i].alive) {\r\n          ctx.clearRect(explosionList[i].posX, explosionList[i].posY,\r\n            explosionList[i].width -10, explosionList[i].height - 10);\r\n\r\n            explosionList[i].update();\r\n            explosionList[i].drawSelf();\r\n              if (explosionList[i].timer >= 200) {\r\n                explosionList[i].destroy();\r\n                explosionList.splice(i, 1);\r\n              }\r\n        } else {\r\n          //if its in the list but not alive...\r\n          explosionList[i].destroy();\r\n          explosionList.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    function enemyUpdate() {\r\n      if (window.playing) {\r\n\r\n        for (let i = 0; i < enemyList.length; i++) {\r\n          if (enemyList[i].alive) {\r\n            enemyList[i].moveHorizontal();\r\n            enemyList[i].moveVertical();\r\n          } else {\r\n            //get rid of enemy from list\r\n            enemyList.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function enemyAttack() {\r\n      if (window.playing) {\r\n        for (let i = 0; i < enemyList.length; i++) {\r\n          if (enemyList[i].alive) {\r\n            enemyList[i].shoot(enemyList[i]);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    function randomSpawn() {\r\n      if (window.playing) {\r\n        if (enemyList.length < 12) {\r\n          let randomX = randomInt(0, 10);\r\n          let spawnXs = [60, 110, 160, 220, 270, 320, 370, 420, 470, 520]\r\n          let newenemy = new enemyShip(spawnXs[randomX], 30,\r\n            30, 30, 30, 30, \"enemyShip\");\r\n            newenemy.drawSelf();\r\n            enemyList.push(newenemy);\r\n\r\n          }\r\n\r\n      }\r\n    }\r\n\r\n    function beacon(image) {\r\n      this.timer = 20000;\r\n      this.image = image;\r\n      this.imagePosX = 400;\r\n      this.imagePosY = 200;\r\n      this.runTimer = function() {\r\n        this.timer -= 1;\r\n        this.imagePosY += 1;\r\n      }\r\n\r\n      this.drawSelf = function() {\r\n        //draw beacon, vertical line, 2 horiz lines\r\n        //clear, then invoke update, then redraw\r\n        ctx_ui.clearRect(this.imagePosX, this.imagePosY, 100, 50);\r\n        // this.runTimer();\r\n        // ctx_ui.drawImage(imageRepo.beacon,\r\n        // this.imagePosX, this.imagePosY, 100, 50);\r\n      }\r\n\r\n    }\r\n\r\n    function drawUI() {\r\n      //left side\r\n      ctx_ui.font = \"14px Calibri\";\r\n      ctx_ui.clearRect(0, 280, 100, 80);\r\n      ctx_ui.fillText(\"Score:\", 0, 300);\r\n      ctx_ui.fillText(window.score, 45, 300);\r\n      ctx_ui.fillText(\"Shield:\", 0, 320);\r\n      ctx_ui.fillText(playerList[0].shieldHP, 45, 320);\r\n      ctx_ui.fillText(\"Hull:\", 0, 340);\r\n      ctx_ui.fillText(playerList[0].hullHP, 45, 340);\r\n\r\n      //rightside\r\n      ctx_ui.clearRect(500, 280, 100, 50);\r\n      ctx_ui.fillText(\"Beacon Status:\", 510, 300);\r\n      ctx_ui.fillText(window.beaconstatus, 510, 320);\r\n    }\r\n\r\n    function updateLoop() {\r\n      if (window.playing) {\r\n        window.requestAnimationFrame(updateLoop);\r\n        window.bg.drawSelf();\r\n        updateShip();\r\n        drawUI();\r\n        updateBullets();\r\n        updateExplosions();\r\n        updateCannon();\r\n        if (window.beaconstatus > -4)\r\n        window.beaconstatus -= 2;\r\n        defeatCondition();\r\n        winCondition();\r\n      }\r\n    }\r\n\r\n  function setAllIntervals() {\r\n    //custom update intervals\r\n      window.setInterval(randomSpawn, 3000);\r\n      window.setInterval(enemyUpdate, 500);\r\n      window.setInterval(enemyAttack, randomInt(500, 5000));\r\n  }//end set all intervals\r\n\r\n  function updateCannon() {\r\n    let thisCannon = window.playerList[1];\r\n    //it never goes in here\r\n    if (!thisCannon.alive) {\r\n      //something is going wrong here\r\n      thisCannon.deathtimer += 1;\r\n      console.log(thisCannon.deathtimer);\r\n      if (thisCannon.deathtimer >= 10) {\r\n        thisCannon.respawn();\r\n      }\r\n    } else {\r\n      //its alive\r\n      thisCannon.drawSelf();\r\n\r\n\r\n    }\r\n\r\n  }//end of update cannon\r\n\r\n\r\n  //gotta split horizontal and vertical properly\r\n  function moveRight() {\r\n\r\n    ctx.clearRect(cannon.posX, cannon.posY, cannon.width, cannon.height - 15);\r\n\r\n    //horizontal movement\r\n    if (cannon.posX > 70 && cannon.posX < 530) {\r\n      cannon.posX += 20;\r\n    } else {\r\n      cannon.posX += 10;\r\n    }\r\n\r\n    //vertical movement\r\n\r\n    //descend while you're on right\r\n    if (cannon.posX > 415) {\r\n      cannon.posY += 10;\r\n    }\r\n    //ascend while you're on left\r\n    else if (cannon.posX < 300) {\r\n      cannon.posY -= 10;\r\n    } else if (cannon.posX < 185) {\r\n      cannon.posY -= 15;\r\n    }\r\n\r\n    //downward bounds\r\n    if (cannon.posY > 400)\r\n    cannon.posY = 400;\r\n\r\n    //upward bounds\r\n    if (cannon.posY < 260)\r\n    cannon.posY = 260;\r\n\r\n    cannon.screenResets();\r\n  }\r\n\r\n  function moveLeft() {\r\n\r\n    ctx.clearRect(cannon.posX, cannon.posY, cannon.width, cannon.height - 15);\r\n\r\n    //horizontal movement\r\n    if (cannon.posX > 70 && cannon.posX < 580) {\r\n      cannon.posX -= 20;\r\n    } else {\r\n      cannon.posX -= 10;\r\n    }\r\n\r\n    //vertical movement\r\n\r\n    //decend while you're on left\r\n    if (cannon.posX < 185) {\r\n      cannon.posY += 10;\r\n    }\r\n    //ascend while you're on right\r\n    else if (cannon.posX > 300) {\r\n      cannon.posY -= 10;\r\n    } else if (cannon.posX > 415) {\r\n      cannon.posY -= 15;\r\n    }\r\n\r\n    //downward bounds\r\n    if (cannon.posY > 400)\r\n    cannon.posY = 400;\r\n\r\n    //upward bounds\r\n    if (cannon.posY < 260)\r\n    cannon.posY = 260;\r\n    cannon.screenResets();\r\n  }\r\n\r\n  function defeatCondition() {\r\n    if (playerList[0].hullHP <= 0)\r\n    defeat();\r\n  }\r\n\r\n  function winCondition() {\r\n    if (playerList[0].hullHP > 0 && beaconstatus <= 0)\r\n    victory();\r\n  }\r\n\r\n  function drawIntro() {\r\n    ctx_bg.fillRect(0,0,600,400);\r\n    ctx_ui.fillStyle = \"White\";\r\n    ctx_ui.font = '8px \"Press Start 2P\"';\r\n    ctx_ui.fillText(\"You are the last remaining survivors of your species,\", 40, 40);\r\n    ctx_ui.fillText(\"thrust into the void of space...\", 40, 50);\r\n    ctx_ui.fillText(\"...after your homeworld was ravaged by environmental destruction\", 40, 60);\r\n    ctx_ui.fillText(\"your sensors have identified a nearby habitable planet...\", 40, 80);\r\n    ctx_ui.fillText(\"The third planet in the Milky Way Galaxy...\", 40, 90);\r\n    ctx_ui.font = '10px \"Press Start 2P\"';\r\n    ctx_ui.fillText(\"PROTECT THE MOTHERSHIP UNTIL INVASION BEACON TOUCHDOWN.\", 40, 120);\r\n    ctx_ui.fillText(\"Use       to move cannon's position.\", 40, 260);\r\n    ctx_ui.fillText(\"Shoot puny Earthlings with        .\", 40, 280);\r\n    ctx_ui.fillText(\"Press Enter to Begin.\", 40, 340);\r\n  }\r\n\r\n  function defeat() {\r\n    window.playing = false;\r\n    window.audioRepo.bgm.pause();\r\n    window.defeat = true;\r\n    if (window.defeat) {\r\n      cannon.alive = false;\r\n      ctx_ui.fillStyle = \"White\";\r\n      ctx_ui.font = '40px \"Press Start 2P\"';\r\n      ctx_ui.fillText(\"DEFEAT\", canvas.width / 2 -100, 55);\r\n    }\r\n    //show graphic for defeated\r\n  }\r\n\r\n  function victory() {\r\n    window.playing = false;\r\n    window.audioRepo.bgm.pause();\r\n    window.victory = true;\r\n    if (window.victory) {\r\n      cannon.alive = false;\r\n      ctx_ui.fillStyle = \"White\";\r\n      ctx_ui.font = '40px \"Press Start 2P\"';\r\n      ctx_ui.fillText(\"VICTORY\", canvas.width / 2 -100, 55);\r\n    }\r\n    //show graphic for victory\r\n  }\r\n\r\n\r\n  //keypress handler\r\n  //this is also basically the update() for ship\r\n  document.addEventListener('keydown', (e) => {\r\n\r\n    if (cannon.alive) {\r\n      switch (e.keyCode) {\r\n\r\n        //left\r\n        case 37:\r\n          e.preventDefault();\r\n          moveLeft();\r\n          ctx.drawImage(imageRepo.cannonSheet,\r\n          0, 0, 90, 220,\r\n          cannon.posX, cannon.posY, cannon.width, cannon.height - 20);\r\n        break;\r\n\r\n        //right\r\n        case 39:\r\n          e.preventDefault();\r\n          moveRight();\r\n          ctx.drawImage(imageRepo.cannonSheet,\r\n          0, 0, 90, 220,\r\n          cannon.posX, cannon.posY, cannon.width, cannon.height - 20);\r\n        break;\r\n\r\n        //spacebar shoot\r\n        case 32:\r\n          e.preventDefault();\r\n          playerList[1].playerShoot();\r\n        break;\r\n\r\n        //this is a tester button (q)\r\n        case 81:\r\n          e.preventDefault();\r\n\r\n        break;\r\n\r\n          //add another case for pause if time allows\r\n          default:\r\n        }\r\n\r\n    }\r\n  });\r\n\r\n})//end of DOMContentLoaded\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}